{"ast":null,"code":"var _jsxFileName = \"/Users/vladyslavharshyn/Documents/GitHub/goit-react-hw-03-image-finder/src/shared/Modal/Modal.jsx\";\nimport { Overlay, ModalContainer } from './Modal.styled';\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalRoot = document.querySelector('#modal-root');\nconsole.log(ModalContainer);\nexport class Modal extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        this.props.closeModal();\n      }\n    };\n\n    this.handleBackdropClick = e => {\n      if (e.currentTarget === e.target) {\n        this.props.closeModal();\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  render() {\n    return /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(Overlay, {\n      onClick: this.handleBackdropClick,\n      children: /*#__PURE__*/_jsxDEV(ModalContainer, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.props.url,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), modalRoot);\n  }\n\n}\nModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  url: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/vladyslavharshyn/Documents/GitHub/goit-react-hw-03-image-finder/src/shared/Modal/Modal.jsx"],"names":["Overlay","ModalContainer","PropTypes","Component","createPortal","modalRoot","document","querySelector","console","log","Modal","handleKeyDown","e","code","props","closeModal","handleBackdropClick","currentTarget","target","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","url","propTypes","func","isRequired","string"],"mappings":";AAAA,SAASA,OAAT,EAAkBC,cAAlB,QAAwC,gBAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,QAA6B,WAA7B;;AAEA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAlB;AACAC,OAAO,CAACC,GAAR,CAAYR,cAAZ;AAEA,OAAO,MAAMS,KAAN,SAAoBP,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAMnCQ,aANmC,GAMnBC,CAAC,IAAI;AACnB,UAAIA,CAAC,CAACC,IAAF,KAAW,QAAf,EAAyB;AACvB,aAAKC,KAAL,CAAWC,UAAX;AACD;AACF,KAVkC;;AAAA,SAYnCC,mBAZmC,GAYbJ,CAAC,IAAI;AACzB,UAAIA,CAAC,CAACK,aAAF,KAAoBL,CAAC,CAACM,MAA1B,EAAkC;AAChC,aAAKJ,KAAL,CAAWC,UAAX;AACD;AACF,KAhBkC;AAAA;;AAkBnCI,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKV,aAAxC;AACD;;AAEDW,EAAAA,oBAAoB,GAAG;AACrBF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,SAA3B,EAAsC,KAAKZ,aAA3C;AACD;;AAEDa,EAAAA,MAAM,GAAG;AACP,wBAAOpB,YAAY,eACjB,QAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKY,mBAAvB;AAAA,6BACE,QAAC,cAAD;AAAA,+BACE;AAAK,UAAA,GAAG,EAAE,KAAKF,KAAL,CAAWW,GAArB;AAA0B,UAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADiB,EAMjBpB,SANiB,CAAnB;AAQD;;AAnCkC;AAAxBK,K,CACJgB,S,GAAY;AACjBX,EAAAA,UAAU,EAAEb,SAAS,CAACyB,IAAV,CAAeC,UADV;AAEjBH,EAAAA,GAAG,EAAEvB,SAAS,CAAC2B,MAAV,CAAiBD;AAFL,C","sourcesContent":["import { Overlay, ModalContainer } from './Modal.styled';\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\nconsole.log(ModalContainer);\n\nexport class Modal extends Component {\n  static propTypes = {\n    closeModal: PropTypes.func.isRequired,\n    url: PropTypes.string.isRequired,\n  };\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.closeModal();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.closeModal();\n    }\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  render() {\n    return createPortal(\n      <Overlay onClick={this.handleBackdropClick}>\n        <ModalContainer>\n          <img src={this.props.url} alt=\"\" />\n        </ModalContainer>\n      </Overlay>,\n      modalRoot\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}