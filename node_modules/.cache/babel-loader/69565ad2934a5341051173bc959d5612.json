{"ast":null,"code":"var _jsxFileName = \"/Users/vladyslavharshyn/Documents/GitHub/goit-react-hw-04-images/src/shared/Modal/Modal.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalRoot = document.querySelector('#modal-root');\nexport const ModalWindow = _ref => {\n  _s();\n\n  let {\n    closeModal,\n    src\n  } = _ref;\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    };\n\n    if (src) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [src, closeModal]);\n\n  const handleClose = e => {\n    if (e.currentTarget === e.target) {\n      closeModal();\n    }\n  };\n\n  return /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.overlay,\n    onClick: handleClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.modal,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: s.img,\n        src: src\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this), modalRoot);\n};\n\n_s(ModalWindow, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ModalWindow;\nexport default ModalWindow;\nModalWindow.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  url: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalWindow\");","map":{"version":3,"sources":["/Users/vladyslavharshyn/Documents/GitHub/goit-react-hw-04-images/src/shared/Modal/Modal.jsx"],"names":["useEffect","createPortal","PropTypes","s","modalRoot","document","querySelector","ModalWindow","closeModal","src","handleKeyDown","e","code","window","addEventListener","removeEventListener","handleClose","currentTarget","target","overlay","modal","img","propTypes","func","isRequired","url","string"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,CAAP,MAAc,oBAAd;;AAEA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAwB;AAClDT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,aAAa,GAAGC,CAAC,IAAI;AACzB,UAAIA,CAAC,CAACC,IAAF,KAAW,QAAf,EAAyB;AACvBJ,QAAAA,UAAU;AACX;AACF,KAJD;;AAKA,QAAIC,GAAJ,EAAS;AACPI,MAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCJ,aAAnC;AACD;;AAED,WAAO,MAAM;AACXG,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCL,aAAtC;AACD,KAFD;AAGD,GAbQ,EAaN,CAACD,GAAD,EAAMD,UAAN,CAbM,CAAT;;AAeA,QAAMQ,WAAW,GAAGL,CAAC,IAAI;AACvB,QAAIA,CAAC,CAACM,aAAF,KAAoBN,CAAC,CAACO,MAA1B,EAAkC;AAChCV,MAAAA,UAAU;AACX;AACF,GAJD;;AAMA,sBAAOP,YAAY,eACjB;AAAK,IAAA,SAAS,EAAEE,CAAC,CAACgB,OAAlB;AAA2B,IAAA,OAAO,EAAEH,WAApC;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEb,CAAC,CAACiB,KAAlB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAEjB,CAAC,CAACkB,GAAlB;AAAuB,QAAA,GAAG,EAAEZ;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADiB,EAMjBL,SANiB,CAAnB;AAQD,CA9BM;;GAAMG,W;;KAAAA,W;AAgCb,eAAeA,WAAf;AAEAA,WAAW,CAACe,SAAZ,GAAwB;AACtBd,EAAAA,UAAU,EAAEN,SAAS,CAACqB,IAAV,CAAeC,UADL;AAEtBC,EAAAA,GAAG,EAAEvB,SAAS,CAACwB,MAAV,CAAiBF;AAFA,CAAxB","sourcesContent":["import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const ModalWindow = ({ closeModal, src }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    };\n    if (src) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [src, closeModal]);\n\n  const handleClose = e => {\n    if (e.currentTarget === e.target) {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n    <div className={s.overlay} onClick={handleClose}>\n      <div className={s.modal}>\n        <img className={s.img} src={src} />\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default ModalWindow;\n\nModalWindow.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  url: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}