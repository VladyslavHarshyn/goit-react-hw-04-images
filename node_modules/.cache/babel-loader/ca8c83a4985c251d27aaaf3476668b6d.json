{"ast":null,"code":"import axios from 'axios';\naxios.defaults.baseURL = 'https://pixabay.com/api/';\nconst API_KEY = '27886183-b8a69c4f9a7f08eca44a6c4b4';\nconst BASE_FILTERS = 'image_type=photo&orientation=horizontal&per_page=12';\nexport const loadImage = async (query, page) => {\n  const response = await axios.get(`?q=${query}&page=${page}&key=${API_KEY}&${BASE_FILTERS}`);\n  const images = response.data.hits.map(img => {\n    const {\n      id,\n      largeImageURL,\n      webformatURL,\n      tags\n    } = img;\n    return {\n      id,\n      largeImageURL,\n      webformatURL,\n      tags\n    };\n  });\n  return images;\n};","map":{"version":3,"sources":["/Users/vladyslavharshyn/Documents/GitHub/goit-react-hw-03-image-finder/src/components/services/pixabay.js"],"names":["axios","defaults","baseURL","API_KEY","BASE_FILTERS","loadImage","query","page","response","get","images","data","hits","map","img","id","largeImageURL","webformatURL","tags"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,0BAAzB;AAEA,MAAMC,OAAO,GAAG,oCAAhB;AACA,MAAMC,YAAY,GAAG,qDAArB;AAEA,OAAO,MAAMC,SAAS,GAAG,OAAOC,KAAP,EAAcC,IAAd,KAAuB;AAC9C,QAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CACpB,MAAKH,KAAM,SAAQC,IAAK,QAAOJ,OAAQ,IAAGC,YAAa,EADnC,CAAvB;AAGA,QAAMM,MAAM,GAAGF,QAAQ,CAACG,IAAT,CAAcC,IAAd,CAAmBC,GAAnB,CAAuBC,GAAG,IAAI;AAC3C,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,aAAN;AAAqBC,MAAAA,YAArB;AAAmCC,MAAAA;AAAnC,QAA4CJ,GAAlD;AACA,WAAO;AACLC,MAAAA,EADK;AAELC,MAAAA,aAFK;AAGLC,MAAAA,YAHK;AAILC,MAAAA;AAJK,KAAP;AAMD,GARc,CAAf;AASA,SAAOR,MAAP;AACD,CAdM","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n\nconst API_KEY = '27886183-b8a69c4f9a7f08eca44a6c4b4';\nconst BASE_FILTERS = 'image_type=photo&orientation=horizontal&per_page=12';\n\nexport const loadImage = async (query, page) => {\n  const response = await axios.get(\n    `?q=${query}&page=${page}&key=${API_KEY}&${BASE_FILTERS}`\n  );\n  const images = response.data.hits.map(img => {\n    const { id, largeImageURL, webformatURL, tags } = img;\n    return {\n      id,\n      largeImageURL,\n      webformatURL,\n      tags,\n    };\n  });\n  return images;\n};\n"]},"metadata":{},"sourceType":"module"}