{"ast":null,"code":"var _jsxFileName = \"/Users/vladyslavharshyn/Documents/GitHub/goit-react-hw-04-images/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Container } from './App.styled';\nimport { Searchbar } from './components/Searchbar/Searchbar';\nimport { ImageGallery } from './components/ImageGallery/ImageGallery';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { Button } from './shared/Button/Button';\nimport ModalWindow from './shared/Modal/Modal';\nimport * as API from './components/services/pixabay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [page, setPage] = useState(1);\n  const [query, setQuery] = useState('');\n  const [items, setItems] = useState([]);\n  const [currentLargeImageURL, setCurrentLargeImageURL] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    if (query !== '') {\n      addImages(query, page);\n    }\n  }, [query, page]);\n\n  const onFormSubmit = newQuery => {\n    if (newQuery.trim().length === 0) {\n      alert('Please, enter request');\n      return;\n    }\n\n    setQuery(newQuery);\n    setPage(1);\n    setItems([]);\n  };\n\n  const addImages = async (query, page) => {\n    try {\n      setIsLoading(true);\n      const image = await API.loadImage(query, page);\n      setItems(prevState => [...prevState, ...image]);\n      setIsLoading(false);\n\n      if (image.length === 0) {\n        alert(\"Sorry, we can't find anyting for your request. Please, enter another request\");\n      }\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n      onSubmit: onFormSubmit,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), items.length > 0 && /*#__PURE__*/_jsxDEV(ImageGallery, {\n      items: items,\n      onClick: setCurrentLargeImageURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(ThreeDots, {\n      height: \"50\",\n      width: \"50\",\n      color: \"#303f9f\",\n      ariaLabel: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), items.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n      onLoadMore: () => setPage(prev => prev + 1),\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), currentLargeImageURL && /*#__PURE__*/_jsxDEV(ModalWindow, {\n      src: currentLargeImageURL,\n      closeModal: () => setCurrentLargeImageURL('')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}; // export class App extends Component {\n//   state = {\n//     page: 1,\n//     query: '',\n//     items: [],\n//     currentLargeImageURL: '',\n//     error: null,\n//     isLoading: false,\n//   };\n//   onOpenModalWithLargeImage = url => {\n//     this.setState({\n//       currentLargeImageURL: url,\n//     });\n//   };\n//   onModalClose = () => {\n//     this.setState({\n//       currentLargeImageURL: '',\n//     });\n//   };\n//   onFormSubmit = query => {\n//     if (query.trim().length === 0) {\n//       alert('Please, enter request');\n//       return;\n//     }\n//     this.setState({\n//       query,\n//       page: 1,\n//       items: [],\n//     });\n//   };\n//   onLoadMoreButton = () => {\n//     this.setState(prevState => ({\n//       page: prevState.page + 1,\n//     }));\n//   };\n//   addImages = async (query, page) => {\n//     try {\n//       this.setState({\n//         isLoading: true,\n//       });\n//       const images = await API.loadImage(query, page);\n//       this.setState(prevState => ({\n//         items: [...prevState.items, ...images],\n//         isLoading: false,\n//       }));\n//       if (images.length === 0) {\n//         alert(\n//           \"Sorry, we can't find anyting for your request. Please, enter another request\"\n//         );\n//       }\n//     } catch (error) {\n//       this.setState({\n//         error: error.message,\n//       });\n//     } finally {\n//       this.setState({\n//         isLoading: false,\n//       });\n//     }\n//   };\n//   componentDidUpdate(_, prevState) {\n//     if (\n//       prevState.page !== this.state.page ||\n//       prevState.query !== this.state.query\n//     ) {\n//       this.addImages(this.state.query, this.state.page);\n//     }\n//   }\n//   render() {\n//     const { items, currentLargeImageURL, isLoading, error } = this.state;\n//     return (\n//       <Container>\n//         <Searchbar onSubmit={this.onFormSubmit} isLoading={isLoading} />\n//         {error && <p>{error}</p>}\n//         {items.length > 0 && (\n//           <ImageGallery\n//             items={items}\n//             onClick={this.onOpenModalWithLargeImage}\n//           />\n//         )}\n//         {isLoading && (\n//           <ThreeDots\n//             height=\"50\"\n//             width=\"50\"\n//             color=\"#303f9f\"\n//             ariaLabel=\"loading\"\n//           />\n//         )}\n//         {items.length > 0 && (\n//           <Button onLoadMore={this.onLoadMoreButton} isLoading={isLoading} />\n//         )}\n//         {currentLargeImageURL && (\n//           <ModalWindow\n//             src={currentLargeImageURL}\n//             closeModal={this.onModalClose}\n//           />\n//         )}\n//       </Container>\n//     );\n//   }\n// }\n\n_s(App, \"M8LH/q+BqRzR8C242EMgd4lb8i4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vladyslavharshyn/Documents/GitHub/goit-react-hw-04-images/src/App.jsx"],"names":["useState","useEffect","Container","Searchbar","ImageGallery","ThreeDots","Button","ModalWindow","API","App","page","setPage","query","setQuery","items","setItems","currentLargeImageURL","setCurrentLargeImageURL","error","setError","isLoading","setIsLoading","addImages","onFormSubmit","newQuery","trim","length","alert","image","loadImage","prevState","message","prev"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Container } from './App.styled';\nimport { Searchbar } from './components/Searchbar/Searchbar';\nimport { ImageGallery } from './components/ImageGallery/ImageGallery';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { Button } from './shared/Button/Button';\nimport ModalWindow from './shared/Modal/Modal';\nimport * as API from './components/services/pixabay';\n\nexport const App = () => {\n  const [page, setPage] = useState(1);\n  const [query, setQuery] = useState('');\n  const [items, setItems] = useState([]);\n  const [currentLargeImageURL, setCurrentLargeImageURL] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (query !== '') {\n      addImages(query, page);\n    }\n  }, [query, page]);\n\n  const onFormSubmit = newQuery => {\n    if (newQuery.trim().length === 0) {\n      alert('Please, enter request');\n      return;\n    }\n\n    setQuery(newQuery);\n    setPage(1);\n    setItems([]);\n  };\n\n  const addImages = async (query, page) => {\n    try {\n      setIsLoading(true);\n      const image = await API.loadImage(query, page);\n      setItems(prevState => [...prevState, ...image]);\n      setIsLoading(false);\n\n      if (image.length === 0) {\n        alert(\n          \"Sorry, we can't find anyting for your request. Please, enter another request\"\n        );\n      }\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Container>\n      <Searchbar onSubmit={onFormSubmit} isLoading={isLoading} />\n      {error && <p>{error}</p>}\n      {items.length > 0 && (\n        <ImageGallery items={items} onClick={setCurrentLargeImageURL} />\n      )}\n      {isLoading && (\n        <ThreeDots height=\"50\" width=\"50\" color=\"#303f9f\" ariaLabel=\"loading\" />\n      )}\n      {items.length > 0 && (\n        <Button\n          onLoadMore={() => setPage(prev => prev + 1)}\n          isLoading={isLoading}\n        />\n      )}\n      {currentLargeImageURL && (\n        <ModalWindow\n          src={currentLargeImageURL}\n          closeModal={() => setCurrentLargeImageURL('')}\n        />\n      )}\n    </Container>\n  );\n};\n\n// export class App extends Component {\n//   state = {\n//     page: 1,\n//     query: '',\n//     items: [],\n//     currentLargeImageURL: '',\n//     error: null,\n//     isLoading: false,\n//   };\n\n//   onOpenModalWithLargeImage = url => {\n//     this.setState({\n//       currentLargeImageURL: url,\n//     });\n//   };\n\n//   onModalClose = () => {\n//     this.setState({\n//       currentLargeImageURL: '',\n//     });\n//   };\n\n//   onFormSubmit = query => {\n//     if (query.trim().length === 0) {\n//       alert('Please, enter request');\n//       return;\n//     }\n\n//     this.setState({\n//       query,\n//       page: 1,\n//       items: [],\n//     });\n//   };\n\n//   onLoadMoreButton = () => {\n//     this.setState(prevState => ({\n//       page: prevState.page + 1,\n//     }));\n//   };\n\n//   addImages = async (query, page) => {\n//     try {\n//       this.setState({\n//         isLoading: true,\n//       });\n//       const images = await API.loadImage(query, page);\n\n//       this.setState(prevState => ({\n//         items: [...prevState.items, ...images],\n//         isLoading: false,\n//       }));\n//       if (images.length === 0) {\n//         alert(\n//           \"Sorry, we can't find anyting for your request. Please, enter another request\"\n//         );\n//       }\n//     } catch (error) {\n//       this.setState({\n//         error: error.message,\n//       });\n//     } finally {\n//       this.setState({\n//         isLoading: false,\n//       });\n//     }\n//   };\n\n//   componentDidUpdate(_, prevState) {\n//     if (\n//       prevState.page !== this.state.page ||\n//       prevState.query !== this.state.query\n//     ) {\n//       this.addImages(this.state.query, this.state.page);\n//     }\n//   }\n\n//   render() {\n//     const { items, currentLargeImageURL, isLoading, error } = this.state;\n\n//     return (\n//       <Container>\n//         <Searchbar onSubmit={this.onFormSubmit} isLoading={isLoading} />\n//         {error && <p>{error}</p>}\n//         {items.length > 0 && (\n//           <ImageGallery\n//             items={items}\n//             onClick={this.onOpenModalWithLargeImage}\n//           />\n//         )}\n//         {isLoading && (\n//           <ThreeDots\n//             height=\"50\"\n//             width=\"50\"\n//             color=\"#303f9f\"\n//             ariaLabel=\"loading\"\n//           />\n//         )}\n//         {items.length > 0 && (\n//           <Button onLoadMore={this.onLoadMoreButton} isLoading={isLoading} />\n//         )}\n//         {currentLargeImageURL && (\n//           <ModalWindow\n//             src={currentLargeImageURL}\n//             closeModal={this.onModalClose}\n//           />\n//         )}\n//       </Container>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}