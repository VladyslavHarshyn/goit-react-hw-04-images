{"ast":null,"code":"var _jsxFileName = \"/Users/vladyslavharshyn/Documents/GitHub/goit-react-hw-03-image-finder/src/shared/Modal/Modal.jsx\";\nimport PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styles from \"./Modal.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalRoot = document.getElementById(\"modal-root\");\n\nclass Modal extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleClose = e => {\n      const {\n        onClose\n      } = this.props;\n\n      if (e.target === e.currentTarget) {\n        onClose();\n        return;\n      }\n\n      if (e.code === \"Escape\") {\n        onClose();\n      }\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleClose);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleClose);\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    const {\n      handleClose\n    } = this;\n    return /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Overlay,\n      onClick: handleClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Module,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), modalRoot);\n  }\n\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired\n};\nexport default Modal;","map":{"version":3,"sources":["/Users/vladyslavharshyn/Documents/GitHub/goit-react-hw-03-image-finder/src/shared/Modal/Modal.jsx"],"names":["PropTypes","Component","createPortal","styles","modalRoot","document","getElementById","Modal","handleClose","e","onClose","props","target","currentTarget","code","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","children","Overlay","Module","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,QAA6B,WAA7B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAlB;;AAEA,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAS5BO,WAT4B,GASbC,CAAD,IAAO;AACnB,YAAM;AAAEC,QAAAA;AAAF,UAAc,KAAKC,KAAzB;;AAEA,UAAIF,CAAC,CAACG,MAAF,KAAaH,CAAC,CAACI,aAAnB,EAAkC;AAChCH,QAAAA,OAAO;AACP;AACD;;AACD,UAAID,CAAC,CAACK,IAAF,KAAW,QAAf,EAAyB;AACvBJ,QAAAA,OAAO;AACR;AACF,KAnB2B;AAAA;;AAC5BK,EAAAA,iBAAiB,GAAG;AAClBV,IAAAA,QAAQ,CAACW,gBAAT,CAA0B,SAA1B,EAAqC,KAAKR,WAA1C;AACD;;AAEDS,EAAAA,oBAAoB,GAAG;AACrBZ,IAAAA,QAAQ,CAACa,mBAAT,CAA6B,SAA7B,EAAwC,KAAKV,WAA7C;AACD;;AAcDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKT,KAA1B;AAEA,UAAM;AAAEH,MAAAA;AAAF,QAAkB,IAAxB;AAEA,wBAAON,YAAY,eACjB;AAAK,MAAA,SAAS,EAAEC,MAAM,CAACkB,OAAvB;AAAgC,MAAA,OAAO,EAAEb,WAAzC;AAAA,6BACE;AAAK,QAAA,SAAS,EAAEL,MAAM,CAACmB,MAAvB;AAAA,kBAAgCF;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADiB,EAIjBhB,SAJiB,CAAnB;AAMD;;AAhC2B;;AAmC9BG,KAAK,CAACgB,SAAN,GAAkB;AAChBb,EAAAA,OAAO,EAAEV,SAAS,CAACwB,IAAV,CAAeC;AADR,CAAlB;AAIA,eAAelB,KAAf","sourcesContent":["import PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport styles from \"./Modal.module.css\";\n\nconst modalRoot = document.getElementById(\"modal-root\");\n\nclass Modal extends Component {\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleClose);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleClose);\n  }\n\n  handleClose = (e) => {\n    const { onClose } = this.props;\n\n    if (e.target === e.currentTarget) {\n      onClose();\n      return;\n    }\n    if (e.code === \"Escape\") {\n      onClose();\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n\n    const { handleClose } = this;\n\n    return createPortal(\n      <div className={styles.Overlay} onClick={handleClose}>\n        <div className={styles.Module}>{children}</div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}