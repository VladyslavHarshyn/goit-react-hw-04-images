{"ast":null,"code":"var _jsxFileName = \"/Users/vladyslavharshyn/Documents/GitHub/goit-react-hw-03-image-finder/src/App.jsx\";\nimport React, { Component } from 'react';\nimport { Container } from './App.styled';\nimport { Searchbar } from './components/Searchbar/Searchbar';\nimport { ImageGallery } from './components/ImageGallery/ImageGallery';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { Button } from './shared/Button/Button';\nimport ModalWindow from './shared/Modal/Modal';\nimport * as API from './components/services/pixabay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      page: 1,\n      query: '',\n      items: [],\n      currentLargeImageURL: '',\n      error: null,\n      isLoading: false\n    };\n\n    this.onOpenModalWithLargeImage = url => {\n      this.setState({\n        currentLargeImageURL: url\n      });\n    };\n\n    this.onModalClose = () => {\n      this.setState({\n        currentLargeImageURL: ''\n      });\n    };\n\n    this.onFormSubmit = query => {\n      if (query.trim().length === 0) {\n        alert('Please, enter request');\n        return;\n      }\n\n      this.setState({\n        query,\n        page: 1,\n        items: []\n      });\n    };\n\n    this.onLoadMoreButton = () => {\n      this.setState(prevState => ({\n        page: prevState.page + 1\n      }));\n    };\n\n    this.addImages = async (query, page) => {\n      try {\n        this.setState({\n          isLoading: true\n        });\n        const images = await API.loadImage(query, page);\n        this.setState(prevState => ({\n          items: [...prevState.items, ...images],\n          isLoading: false\n        }));\n\n        if (images.length === 0) {\n          alert(\"Sorry, we can't find anyting for your request. Please, enter another request\");\n        }\n      } catch (error) {\n        this.setState({\n          error: error.message\n        });\n      } finally {\n        this.setState({\n          isLoading: false\n        });\n      }\n    };\n  }\n\n  componentDidUpdate(_, prevState) {\n    if (prevState.page !== this.state.page || prevState.query !== this.state.query) {\n      this.addImages(this.state.query, this.state.page);\n    }\n  }\n\n  render() {\n    const {\n      items,\n      currentLargeImageURL,\n      isLoading,\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n        onSubmit: this.onFormSubmit,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }, this), items.length > 0 && /*#__PURE__*/_jsxDEV(ImageGallery, {\n        items: items,\n        onClick: this.onOpenModalWithLargeImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(ThreeDots, {\n        height: \"50\",\n        width: \"50\",\n        color: \"#303f9f\",\n        ariaLabel: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), items.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n        onLoadMore: this.onLoadMoreButton,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), currentLargeImageURL && /*#__PURE__*/_jsxDEV(ModalWindow, {\n        src: this.onOpenModalWithLargeImage // alt={alt}\n        ,\n        closeModal: this.onModalClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/vladyslavharshyn/Documents/GitHub/goit-react-hw-03-image-finder/src/App.jsx"],"names":["React","Component","Container","Searchbar","ImageGallery","ThreeDots","Button","ModalWindow","API","App","state","page","query","items","currentLargeImageURL","error","isLoading","onOpenModalWithLargeImage","url","setState","onModalClose","onFormSubmit","trim","length","alert","onLoadMoreButton","prevState","addImages","images","loadImage","message","componentDidUpdate","_","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container } from './App.styled';\nimport { Searchbar } from './components/Searchbar/Searchbar';\nimport { ImageGallery } from './components/ImageGallery/ImageGallery';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { Button } from './shared/Button/Button';\nimport ModalWindow from './shared/Modal/Modal';\nimport * as API from './components/services/pixabay';\n\nexport class App extends Component {\n  state = {\n    page: 1,\n    query: '',\n    items: [],\n    currentLargeImageURL: '',\n    error: null,\n    isLoading: false,\n  };\n\n  onOpenModalWithLargeImage = url => {\n    this.setState({\n      currentLargeImageURL: url,\n    });\n  };\n\n  onModalClose = () => {\n    this.setState({\n      currentLargeImageURL: '',\n    });\n  };\n\n  onFormSubmit = query => {\n    if (query.trim().length === 0) {\n      alert('Please, enter request');\n      return;\n    }\n\n    this.setState({\n      query,\n      page: 1,\n      items: [],\n    });\n  };\n\n  onLoadMoreButton = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  addImages = async (query, page) => {\n    try {\n      this.setState({\n        isLoading: true,\n      });\n      const images = await API.loadImage(query, page);\n\n      this.setState(prevState => ({\n        items: [...prevState.items, ...images],\n        isLoading: false,\n      }));\n      if (images.length === 0) {\n        alert(\n          \"Sorry, we can't find anyting for your request. Please, enter another request\"\n        );\n      }\n    } catch (error) {\n      this.setState({\n        error: error.message,\n      });\n    } finally {\n      this.setState({\n        isLoading: false,\n      });\n    }\n  };\n\n  componentDidUpdate(_, prevState) {\n    if (\n      prevState.page !== this.state.page ||\n      prevState.query !== this.state.query\n    ) {\n      this.addImages(this.state.query, this.state.page);\n    }\n  }\n\n  render() {\n    const { items, currentLargeImageURL, isLoading, error } = this.state;\n\n    return (\n      <Container>\n        <Searchbar onSubmit={this.onFormSubmit} isLoading={isLoading} />\n        {error && <p>{error}</p>}\n        {items.length > 0 && (\n          <ImageGallery\n            items={items}\n            onClick={this.onOpenModalWithLargeImage}\n          />\n        )}\n        {isLoading && (\n          <ThreeDots\n            height=\"50\"\n            width=\"50\"\n            color=\"#303f9f\"\n            ariaLabel=\"loading\"\n          />\n        )}\n        {items.length > 0 && (\n          <Button onLoadMore={this.onLoadMoreButton} isLoading={isLoading} />\n        )}\n        {currentLargeImageURL && (\n          <ModalWindow\n            src={this.onOpenModalWithLargeImage}\n            // alt={alt}\n            closeModal={this.onModalClose}\n          />\n        )}\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}